@using System.Linq
@model ConfigurationIndexViewModel
@{
	ViewData["Title"] = "Configuration";
	var tab1Active = "active";
	var tab2Active = "";
	var tab3Active = "";
	var tab = TempData["tab"];
	if (tab != null)
	{
		switch (tab)
		{
			case "1":
				tab1Active = "active";
				tab2Active = "";
				tab3Active = "";
				break;
			case "2":
				tab1Active = "";
				tab2Active = "active";
				tab3Active = "";
				break;
			case "3":
				tab1Active = "";
				tab2Active = "";
				tab3Active = "active";
				break;
			default:
				tab1Active = "active";
				tab2Active = "";
				tab3Active = "";
				break;
		}
	}
	var confOk = Model.ConfigurationReadyToStart ? "" : "hidden";
}

<div class="row">
	<div class="col-md-8 col-md-offset-2">
		<h3>Configuration</h3>
		<ul class="nav nav-tabs" id="myTabs" role="tablist">
			<li role="presentation" class="@tab1Active">
				<a href="#columns" id="columns-tab" role="tab" data-toggle="tab" aria-controls="columns" aria-expanded="true">Additional columns</a>
			</li>
			<li role="presentation" class="@tab2Active">
				<a href="#screws" id="screws-tab" role="tab" data-toggle="tab" aria-controls="screws" aria-expanded="false">Screw heads</a>
			</li>
			<li role="presentation" class="@tab3Active @confOk">
				<a href="#runs" id="runs-tab" role="tab" data-toggle="tab" aria-controls="runs" aria-expanded="false">Configuration status</a>
			</li>
		</ul>

		<div class="tab-content" id="myTabContent">
			<div class="tab-pane @tab1Active" role="tabpanel" id="columns" aria-labelledby="columns-tab">
				<p>
					Additional columns allow you to define additional data columns that will be appended to exported file. Here you define only columns, values are added in screw heads' configuration. For example you can define additional column named 'Probably bad' or 'Precise location'
				</p>
				<br />
				<h5>Current Additional Columns</h5>
				<table class="table table-responsive table-bordered">
					<thead>
						<tr>
							<td>
								Id
							</td>
							<td>
								Name
							</td>
							<td>
								Description
							</td>
							<td>
								Delete
							</td>
						</tr>
					</thead>
					@foreach (var addColumns in Model.AddColumns)
					{
					<tr>
						<td>@addColumns.Id</td>
						<td>@addColumns.Name</td>
						<td>@addColumns.Description</td>
						<td><a asp-controller="Configuration" asp-action="DeleteColumn" asp-route-id="@addColumns.Id"><span class="glyphicon glyphicon-remove"></span></a></td>
					</tr>
					}
				</table>
				<br />
				<h5>Add Additional Column</h5>
				<form asp-action="CreateAdditionalColumn" asp-controller="Configuration" asp-antiforgery="true">
					<div class="form-group">
						<label asp-for="AddNewName"></label>
						<input asp-for="AddNewName" class="form-control" />
					</div>
					<div class="form-group">
						<label asp-for="AddNewDesc"></label>
						<input asp-for="AddNewDesc" class="form-control" />
					</div>
					<div class="form-group">
						<input type="submit" />
					</div>
				</form>
			</div>
			<div class="tab-pane @tab2Active" role="tabpanel" id="screws" aria-labelledby="screw-tab">
				<p>
					Screw configuration allow you to configure all screw heads, their IP, location, scheduling of downloading data and values for additional columns.
				</p>
				<br />
				<h5>Current Screw Heads</h5>
				<table class="table table-responsive table-bordered">
					<thead>
						<tr>
							<td>
								Id
							</td>
							<td>
								Name
							</td>
							<td>
								Location
							</td>
							<td>
								Hall
							</td>
							<td>
								CronExp
							</td>
							<td>
								Ip
							</td>
							<td>
								Delete
							</td>
						</tr>
					</thead>
					@foreach (var head in Model.Heads)
					{
					<tr>
						<td>@head.Id</td>
						<td>@head.Name</td>
						<td>@head.Location</td>
						<td>@head.Hall</td>
						<td>@head.CronExp</td>
						<td>@head.Ip</td>
						<td><a asp-controller="Configuration" asp-action="DeleteHead" asp-route-id="@head.Id"><span class="glyphicon glyphicon-remove"></span></a></td>
					</tr>
					}
				</table>
				<br />
				<h5>Add Screw Head</h5>
				<form asp-action="AddHead" asp-controller="Configuration" asp-antiforgery="true">
					<div class="form-group">
						<label asp-for="HeaNewName"></label>
						<input asp-for="HeaNewName" class="form-control" />
					</div>
					<div class="form-group">
						<label asp-for="HeaNewLocation"></label>
						<input asp-for="HeaNewLocation" class="form-control" />
					</div>
					<div class="form-group">
						<label asp-for="HeaNewHall"></label>
						<input asp-for="HeaNewHall" class="form-control" />
					</div>
					<div class="form-group">
						<label asp-for="HeaNewCronExp"></label>
						<input asp-for="HeaNewCronExp" class="form-control" />
					</div>
					<div class="form-group">
						<label asp-for="HeaNewIp"></label>
						<input asp-for="HeaNewIp" class="form-control" />
					</div>
					<br />
					<table class="table table-responsive table-striped">
						<thead>
							<tr>
								<td>
									Column name
								</td>
								<td>
									Column value
								</td>
							</tr>
						</thead>
						@foreach (var item in Model.HeaNewAddColls)
						{
						<tr>
							<td>
								@Model.AddColumns.ToList().Single(i=> i.Id == item.Key).Name
							</td>
							<td>
								<input type="text" name="@("HeaNewAddColls[" + item.Key + "]")" value="@item.Value" />
							</td>
						</tr>
						}
					</table>

					<div class="form-group">
						<input type="submit" />
					</div>
				</form>
			</div>
			<div class="tab-pane @tab3Active @confOk" role="tabpanel" id="runs" aria-labelledby="runs-tab">
				<p>
					You can start scheduled jobs here. If any configuration needs to be changed, you need to stop scheduled jobs, change configuration and start scheduled jobs again.
				</p>
				<br />
				<h5>Scheduled jobs</h5>

				@if (Model.JobsRunning)
				{
					<span class="label label-success">Jobs running</span>
					<form asp-controller="Configuration" asp-action="StopJobs" asp-antiforgery="true">
						<button type="submit" class="btn btn-lg btn-default">Stop Jobs</button>
					</form>
				}
				else
				{
					<span class="label label-danger">Jobs stopped</span>
					<form asp-controller="Configuration" asp-action="StartJobs" asp-antiforgery="true">
						<button type="submit" class="btn btn-lg btn-default">Start Jobs</button>
					</form>
				}

			</div>
		</div>
	</div>
</div>